<Window x:Name="ServiceNowOpenItem" x:Class="ServiceNowOpen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ServiceNow"
        mc:Ignorable="d"
        Height="175" Width="450"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None" Activated="MainWindow1_Activated" GotFocus="MainWindow1_GotFocus" ResizeMode="NoResize" Icon="/now-agent-icon.ico">

   
    <Window.Resources>

        <Storyboard x:Key="OkClickedAnimation">
            <DoubleAnimation From="0.0" To="1" Duration="0:0:5" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
            <DoubleAnimation From="1" To="0.0" Duration="0:0:1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
            <DoubleAnimation From="0.0" To="1" Duration="0:0:1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
        </Storyboard>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="txtItemStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region OKBtn Style-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>


        <Style x:Key="btnOKStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1E2330"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1E2330"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1E2330"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1E2330"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#1E2330"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1E2330"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="btnMenuStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5454ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1C1C1F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>

        <!--#region  btnCloseStyle Region Start-->
        <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1C2C4D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5454ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1C2C4D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1C2C4D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion btnCloseStyle Region END -->
        
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        
        <!--#region Recently Opened Items List Style-->
        <Style x:Key="listRecentlyOpenedItemsStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
            
        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        
        <!--#region Recently Opened Items Button Style-->
        <Style x:Key="btnRecentlyOpenedItemsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1E2330"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5454ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1E2330"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1E2330"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background1" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border1" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background1" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border1" Color="#FFD9D9D9"/>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="chkBoxRounderCornerStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#5454ff"/>
                                <!--<Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5454ff"/>-->
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       

        <!--#endregion Recently Opened Items Button Style-->

    </Window.Resources>
    <Grid Background="#1E2330"
          Name="gridMasterContentGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="8*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="8*"></RowDefinition>
          

        </Grid.RowDefinitions>

        <Grid.Effect>
            <DropShadowEffect BlurRadius="5" ShadowDepth="5" Direction="90" Color="Gray"></DropShadowEffect>

        </Grid.Effect>

        <!--Title grid starts here-->
        <Grid x:Name="gridTitleGrid" 
              Grid.Column="0" 
              Grid.Row="0" 
              Grid.ColumnSpan="2" 
              Width="450" 
              HorizontalAlignment="Left" 
              Background="#1C2C4D" 
              MouseLeftButtonDown="gridTitleGrid_MouseLeftButtonDown">
            
            <TextBlock x:Name="txtTitle" Text="ServiceNow" FontFamily="Bahnschrift SemiCondensed" Foreground="White" FontSize="20" FontWeight="Bold" VerticalAlignment="Center"
                           Margin="10,0,0,0" Grid.ColumnSpan="2" />
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0"  Grid.Column="1"   HorizontalAlignment="Right" VerticalAlignment="Center">

                <Button Name="btnMinimize" Style="{DynamicResource btnCloseStyle}" Width="25" Height="25" 
                    Background="Transparent" HorizontalAlignment="Right" Margin="0,0,10,0"
                    BorderBrush="Transparent" Click="btnMinimize_Click" >
                    <Image x:Name="imgMinimize" Source="\Images\minimize.png" >

                        <Image.Triggers>
                            <EventTrigger x:Name="MinimizeButtonAnimationButtonDown" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">


                                        </DoubleAnimation>



                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>

                    </Image>
                </Button>

                <Button Name="btnClose" Style="{DynamicResource btnCloseStyle}" Width="25" Height="25" 
                    Background="Transparent" HorizontalAlignment="Right"
                    BorderBrush="Transparent" Click="btnClose_Click" >
                    <Image x:Name="imgClose" Source="\Images\power.png">

                        <Image.Triggers>
                            <EventTrigger x:Name="CloseButtonAnimationButtonDown" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">


                                        </DoubleAnimation>



                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>

                    </Image>
                </Button>
            </StackPanel>
           

            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
        </Grid>

        <!--#region Left menu starts here-->
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.RowSpan="4" Background="#1C1C1F" Name="stackPanelMenu">

            <Button Name="btnHome" Style="{DynamicResource btnMenuStyle}"  BorderBrush="Transparent" 
                    Background="Transparent" Height="30" Width="30" Margin="0,10,0,0" Click="btnHome_Click">
                <Image  Name="imgHome" Source="\Images\house-64.png" Stretch="Fill" >

                    <Image.Triggers>
                        <EventTrigger x:Name="MenuHomeAnimation" RoutedEvent="MouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>

                </Image>
            </Button>

            <Button Name="btnHistory" Style="{DynamicResource btnMenuStyle}"
                BorderBrush="Transparent" 
                    Background="Transparent" Height="30" Width="30" Margin="0,10,0,0" Click="btnHistory_Click">
                <Image Source="\Images\history.png" Stretch="Fill">

                    <Image.Triggers>
                        <EventTrigger x:Name="MenuHistoryAnimation" RoutedEvent="MouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1.0" To="0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                    </DoubleAnimation>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>

                </Image>

            </Button>

            <Button Name="btnSettings"  Style="{DynamicResource btnMenuStyle}"  BorderBrush="Transparent" 
                    Background="Transparent" Height="30" Width="30" Margin="0,10,0,0" Click="btnSettings_Click">
                <Image Source="\Images\settings.png" Stretch="Fill">

                    <Image.Triggers>
                        <EventTrigger x:Name="MenuSettingsAnimation" RoutedEvent="MouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </Button>


        </StackPanel>
        <!--#endregion Left menu stops here-->

        <!--#region Start Main Window Region-->

        <Grid Grid.Column="1" Grid.Row="1" Name="gridMainContent" Visibility="Visible">

            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                <TextBlock Text="Open" Foreground="White" 
                       HorizontalAlignment="Left" Height="30" 
                       VerticalAlignment="Center"  FontFamily="Bahnschrift SemiCondensed"
                       FontSize="18" FontWeight="Regular" FontStyle="Normal" Margin="10,5,0,0"/>

                <TextBox Style="{DynamicResource txtItemStyle}" MaxLength="100"  Height="30" Width="275" Margin="10" MaxLines="1" TextWrapping="NoWrap"
                         Padding="5,0,0,0" 
                     Name="txtItem" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" FontWeight="DemiBold"
                     TextChanged="txtItem_TextChanged" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" KeyUp="txtItem_KeyUp"  CharacterCasing="Upper"  FontFamily="Segoe UI"/>
                <Button Style="{DynamicResource btnOKStyle}" Width="30" Height="30"  Background="Transparent" Opacity="0.2" BorderThickness="0" BorderBrush="Transparent" Name="btnOK" IsDefault="True">
                    <Image x:Name="imgOkBtn" Source="Images\check.png" MouseLeftButtonDown="imgOkBtn_MouseLeftButtonDown">
                        <Image.Triggers>
                            <EventTrigger x:Name="ButtonAnimation" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0.0" To="1" Duration="0:0:5" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="0.0" Duration="0:0:1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                        <DoubleAnimation From="0.0" To="1" Duration="0:0:1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>
                    </Image>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="0" Grid.Row="2" Margin="10,0,0,0">
                <CheckBox x:Name="chkBoxFreeTextSearch" Style="{DynamicResource chkBoxRounderCornerStyle}" Content="Use free text search" Foreground="AliceBlue"
                          FontSize="14" FontFamily="Bahnschrift SemiCondensed" VerticalContentAlignment="Center"
                          HorizontalContentAlignment="Left" HorizontalAlignment="Left"/>
                <CheckBox x:Name="chkBoxAlwaysOnTop" Style="{DynamicResource chkBoxRounderCornerStyle}" Content="Always on top" Foreground="AliceBlue"
                          Margin="0,5,0,0" Checked="chkBoxAlwaysOnTop_Checked" VerticalContentAlignment="Center"
                          HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                          Unchecked="chkBoxAlwaysOnTop_Unchecked" FontSize="14" FontFamily="Bahnschrift SemiCondensed"/>

            </StackPanel>
        </Grid>

        <!--#endregion-->

        <!--#region START Recently Opened Items Content-->
        <Grid x:Name="gridHistoryContent" Visibility="Hidden" Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="3*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9*"></ColumnDefinition>
                <ColumnDefinition Width="1.5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
           

            <TextBlock Text="Recently Opened Items" Foreground="AliceBlue" Margin="10,10,0,0" Grid.Row="0" FontSize="18"
                     FontFamily="Bahnschrift SemiCondensed"/>
            <StackPanel Grid.RowSpan="3" Grid.Row="1" Grid.Column="0">

                <ListView ItemsSource="{Binding RecentItems}" Style="{DynamicResource listRecentlyOpenedItemsStyle}"  Name="listViewRecentlyOpenedItems" 
                          Height="80" Width="330" HorizontalAlignment="Left" Margin="10,10,0,0" FontSize="16" FontFamily="Bahnschrift SemiCondensed" Foreground="Black" 
                          SelectionMode="Single" KeyDown="listViewRecentlyOpenedItems_KeyDown" MouseDoubleClick="listViewRecentlyOpenedItems_MouseDoubleClick">

                    <ListView.ItemTemplate>

                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"></RowDefinition>

                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" ></ColumnDefinition>
                                    <ColumnDefinition Width="auto" ></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{Binding DateTimeOpened}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"></Label>
                                <Label Grid.Row="0" Grid.Column="1" Content="{Binding Item}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"></Label>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="1" Margin="10,0,10,10" Grid.Column="1" HorizontalAlignment="Center" Width="60">
                <Button Style="{DynamicResource btnRecentlyOpenedItemsButtonStyle}" x:Name="btnCopy" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" 
                         Background="Transparent" BorderBrush="Transparent" Margin="0,10,0,0">
                    <Image Source="\Images\copy.png" HorizontalAlignment="Center" x:Name="imgCopy" MouseLeftButtonDown="imgCopy_MouseLeftButtonDown">
                        <Image.Triggers>
                            <EventTrigger x:Name="CopyButtonAnimation" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>

                    </Image>
                </Button>

                <Button Style="{DynamicResource btnRecentlyOpenedItemsButtonStyle}" x:Name="btnOpenInBrowser" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" 
                         Background="Transparent" BorderBrush="Transparent" Margin="0,10,0,0">

                    <Image Source="\Images\openinbrowser.png" HorizontalAlignment="Center" x:Name="imgOpenInBrowser" MouseLeftButtonDown="imgOpenInBrowser_MouseLeftButtonDown">
                        <Image.Triggers>
                            <EventTrigger x:Name="OpenInBrowrserButtonAnimation" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard x:Name="OkClickedAnimation">
                                        <DoubleAnimation From="1" To="0.0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>
                    </Image>
                </Button>

            </StackPanel>

        </Grid>
        
        <!--#endregion End of Recently Opened Items region-->

        
        <!--#region Start Settings Content Grid-->
        <Grid x:Name="gridSettingsContent" Visibility="Hidden" Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="6*"></RowDefinition>
                
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
          


            <TextBlock Text="Settings" Foreground="AliceBlue" Margin="10,10,0,0" Grid.Row="0" FontSize="18"
                     FontFamily="Bahnschrift SemiCondensed"
                       />

            <StackPanel Orientation="Horizontal"  Grid.Row="1" Margin="10,10,0,0" Grid.ColumnSpan="2">
                <TextBlock Text="Opacity" Foreground="AliceBlue" Margin="0 0,0,0" VerticalAlignment="Top" FontSize="14" FontFamily="Bahnschrift SemiCondensed"></TextBlock>
                <Slider x:Name="sliderOpacityValue" Height="15" Width="300" VerticalAlignment="top" Margin="10,0,0,0" ValueChanged="sliderOpacityValue_ValueChanged" Maximum="100" Value="100" Interval="36" ></Slider>
                
            </StackPanel>
           
                <CheckBox Style="{DynamicResource chkBoxRounderCornerStyle}" Visibility="Visible" x:Name="chkMinimizeToSystemTray"
                      Grid.Row="3" Grid.Column="0" Foreground="AliceBlue" Margin="10,0,0,0" 
                      HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" 
                      FontFamily="Bahnschrift SemiCondensed" VerticalContentAlignment= "Center"
                      HorizontalContentAlignment="Left" Checked="chkMinimize_Checked" 
                      Unchecked="chkMinimize_Unchecked">


                </CheckBox>
                <TextBlock Text="Hide when minimized"
                 Margin="28,0,0,0"          Foreground="AliceBlue" 
                VerticalAlignment="Top" Grid.Column="0" Grid.Row="3"
                FontFamily="Bahnschrift SemiCondensed" FontSize="14"
                TextAlignment="Left" Width="auto" HorizontalAlignment="Left">
                    
                </TextBlock>

                <TextBlock Text ="Theme" Foreground="AliceBlue" 
                VerticalAlignment="Top" Grid.Column="1" Grid.Row="3"
                FontFamily="Bahnschrift SemiCondensed" FontSize="14"
                TextAlignment="Left" Width="auto" HorizontalAlignment="Left" Margin="90,0,0,0">


                </TextBlock>
            <Button
                    x:Name="btnTheme"
                    Background="Transparent" Width="30" Height="30"
                     Margin="135,0,0,0" Grid.Column="2" Grid.Row="2"
                     HorizontalAlignment="Left" Grid.RowSpan ="2"
                    VerticalAlignment="Top" 
                     BorderBrush="Transparent"
                    Style="{DynamicResource btnMenuStyle}"
                    >
                <Image Source="\Images\palette.png" MouseLeftButtonDown="imgTheme_MouseLeftButtonDown" Name="imgTheme">

                        <Image.Triggers>
                            <EventTrigger x:Name="PaletteAnimation" RoutedEvent="MouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1.0" To="0" Duration="0:0:0.20" Storyboard.TargetProperty="Opacity" AutoReverse="True">

                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>

                    </Image>
                </Button>
           

            <TextBlock x:Name="txtVersion" Width="100" Grid.Row="3" Grid.Column="0" Text="Version: " Foreground="AliceBlue" Margin="10,10,0,0"
                       FontSize="12" FontFamily="Bahnschrift SemiCondensed"
                       VerticalAlignment="Center" HorizontalAlignment="Left"  TextAlignment="Left">
                
            </TextBlock>
         

        </Grid>
        <!--#endregion End Settings Content Grid-->

        
        <Grid Grid.Row="1" Grid.Column="1" Visibility="Hidden"  Margin="10,10,0,0" x:Name="gridColorPalette">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="4*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="3*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="12*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Background="Transparent"
                    BorderBrush="AliceBlue"
                    BorderThickness="1" 
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Grid.Column="1" 
                    Grid.ColumnSpan="2" 
                    CornerRadius="4" 
                    Height="85"
                    Width="250"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" 
                    Padding="20,20,0,0"/>
            <TextBlock Text="Theme" 
                       Foreground="AliceBlue" 
                      
                       Grid.Row="0" 
                       FontSize="18"
                       FontFamily="Bahnschrift SemiCondensed"
                       Grid.Column="0"/>

            <StackPanel Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left">
                <RadioButton Content="Title Bar"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             IsChecked="false"
                             Name="radioTitleButton"
                             Checked="RadioTitleButton_Checked"
                           />
                <RadioButton Content="Left Menu"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             Name="radioMenuButton"
                             IsChecked="False"
                             Checked="RadioLeftMenuButton_Checked"
                             />
                <RadioButton Content="Center Content"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             Name="radioCenterContentButton"
                             IsChecked="False"
                             Checked="RadioCenterContentButton_Checked"
                            />
            </StackPanel>

            <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center">
                <TextBlock Text="Red" 
                       Foreground="AliceBlue" 
                       Height="20"
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       
                       Grid.Column="0"/>
                <TextBlock Text="Green" 
                       Foreground="AliceBlue" 
                       Height="20"
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       Grid.Column="0"/>
                <TextBlock Text="Blue" 
                       Height="20"
                       Foreground="AliceBlue" 
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       Grid.Column="0"/>

            </StackPanel>
            <StackPanel Grid.Row="2" Grid.Column="2">
                <Slider Width="175"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderRed"
                        ValueChanged="sliderRed_ValueChanged"
                         />
                <Slider Width="175"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderGreen"
                        ValueChanged="sliderGreen_ValueChanged"/>
                    
                <Slider Width="175"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderBlue"
                        ValueChanged="sliderBlue_ValueChanged"/>
            </StackPanel>
        </Grid>

    </Grid>
</Window>

<Window x:Name="ServiceNowOpenItem" x:Class="ServiceNowOpen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ServiceNow"
        mc:Ignorable="d"
        Height="175" Width="450"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None" Activated="MainWindow_Activated" GotFocus="MainWindow_GotFocus" ResizeMode="NoResize" Icon="/ServiceNow.ico">


    <Window.Resources>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="txtItemStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="btnMenuStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value= "Transparent"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="Transparent"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1C1C1F"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>

        <!--#region  btnCloseStyle Region Start-->
        <!--<Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                -->
        <!--<Setter Property="Background" TargetName="border" Value="Transparent"/>-->
        <!--
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                -->
        <!--<Setter Property="Background" TargetName="border" Value="Transparent"/>-->
        <!--
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--#endregion btnCloseStyle Region END -->

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

        <!--#region Recently Opened Items List Style-->
        <Style x:Key="listRecentlyOpenedItemsStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>

                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>

        <!--#region Recently Opened Items Button Style-->
        <Style x:Key="btnRecentlyOpenedItemsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#8a78ff"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background1" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border1" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background1" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border1" Color="#FFD9D9D9"/>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="chkBoxRounderCornerStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#5454ff"/>
                                <!--<Setter Property="Background" TargetName="border" Value="#1C1C1F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5454ff"/>-->
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border1" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border1" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border1" Color="#FF569DE5"/>
        <Style x:Key="SettingsTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <!--#endregion Recently Opened Items Button Style-->

    </Window.Resources>


    <Grid Background="#1E2330"
          Name="gridMainWindow">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="8*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="8*"></RowDefinition>


        </Grid.RowDefinitions>

        <!--Title grid starts here-->
        <Grid x:Name="gridTitleBar" 
              Grid.Column="0" 
              Grid.Row="0" 
              Grid.ColumnSpan="2" 
              Width="450" 
              HorizontalAlignment="Left" 
              Background="#1C2C4D" 
              MouseLeftButtonDown="TitleGrid_MouseLeftButtonDown">


            <TextBlock x:Name="txtTitle" Text="ServiceNowOpen" FontFamily="Bahnschrift SemiCondensed" Foreground="White" FontSize="20" FontWeight="Bold" VerticalAlignment="Center"
                           Margin="10,0,0,0" Grid.ColumnSpan="2" />
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0"  Grid.Column="1"   HorizontalAlignment="Right" VerticalAlignment="Center">

                <Button Name="MinimizeButton" Style="{DynamicResource btnMenuStyle}" Width="25" Height="25" 
                    HorizontalAlignment="Right" Margin="0,0,10,0"
                    BorderBrush="Transparent" Click="MinimizeButton_Click" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/minimize-white.png"></ImageBrush>
                    </Button.Background>

                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="MinimizeButton"
                                      Storyboard.TargetProperty="Height"
                                      From="25" To="20" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="MinimizeButton"
                                      Storyboard.TargetProperty="Width"
                                      From="25" To="20" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <Button Name="CloseButton" Style="{DynamicResource btnMenuStyle}" Width="25" Height="25" 
                    HorizontalAlignment="Right"
                    BorderBrush="Transparent" Click="CloseButton_Click" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/close.png"></ImageBrush>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CloseButton"
                                      Storyboard.TargetProperty="Height"
                                      From="25" To="20" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CloseButton"
                                      Storyboard.TargetProperty="Width"
                                      From="25" To="20" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackPanel>


            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
        </Grid>

        <!--#region Left menu starts here-->

        <ScrollViewer VerticalScrollBarVisibility="Hidden" 
                      HorizontalScrollBarVisibility="Hidden"
                      Grid.Column="0"
                      Grid.Row="2">

            <StackPanel Grid.Row="1" Grid.Column="0" Grid.RowSpan="4" Background="#1C1C1F" Name="stackpanelMenu" Height="210">


                <Button Name="HomeMenuButton"  Grid.Column="3" Grid.Row="2" Style="{DynamicResource btnMenuStyle}" BorderBrush="Transparent"
                    Height="30" Width="30" Margin="0,10,0,0" Click="HomeButton_Click" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/home-white.png" Stretch="Fill" TileMode ="None"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="HomeMenuButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="HomeMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>

                </Button>


                <Button Name="RecentItemsMenuButton" Style="{DynamicResource btnMenuStyle}"
                BorderBrush="Transparent"  Grid.Column="3" Grid.Row="2"  
                   Height="30" Width="30" Margin="0,10,0,0" Click="RecentlyOpenedItemsButton_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/recentitems-white.png" Stretch="Fill" TileMode ="None"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RecentItemsMenuButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="RecentItemsMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>
                </Button>

                <Button Name="ThemesMenuButton" Style="{DynamicResource btnMenuStyle}"
                BorderBrush="Transparent"  Grid.Column="3" Grid.Row="2"  
                   Height="30" Width="30" Margin="0,10,0,0" Click="ThemesButton_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/paint-brush-64.png" Stretch="Fill" TileMode ="None"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ThemesMenuButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ThemesMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>
                </Button>


                <Button Name="SettingsMenuButton"  Style="{DynamicResource btnMenuStyle}"  BorderBrush="Transparent" Visibility="Visible"
                    Height="30" Width="30" Margin="0,10,0,0" Click="SettingsButton_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="\Images\settings-white.png"></ImageBrush>
                    </Button.Background>

                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SettingsMenuButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SettingsMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>
                </Button>

                <Button Name="AboutMenuButton"  Style="{DynamicResource btnMenuStyle}"  BorderBrush="Transparent" Visibility="Visible"
                    Height="30" Width="30" Margin="0,10,0,0" Click="AboutMenuButton_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="\Images\about.png"></ImageBrush>
                    </Button.Background>

                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SettingsMenuButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="SettingsMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>
                </Button>


            </StackPanel>

        </ScrollViewer>


        <!--#region Start Settings Content Grid-->
        <ScrollViewer Grid.Column="1" Grid.Row="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
            <Grid x:Name="gridSettingsContent" Visibility="Visible" Grid.Column="1" Grid.Row="1" Margin="5,5,0,0" Height="180">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="1" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,0,0" VerticalAlignment="Top">
                    <TextBlock 
                            Text="ServiceNow URL"  
                            Name="txtServiceNowURL"
                            Height="20"  
                            Foreground="AliceBlue"  
                            FontFamily="Bahnschrift SemiCondensed"   
                            Margin="0,5,0,0"
                            FontSize="14"/>

                    <TextBlock 
                            Text="Configuration Items"
                            Name="txtConfigurationItems"
                            Height="20"  
                            Foreground="AliceBlue"  
                            FontFamily="Bahnschrift SemiCondensed"   
                            FontSize="14"
                            Margin="0,12,0,0"/>

                    <TextBlock 
                            Text="Peripherals"
                            Name="txtPeripherals"
                            Height="20"  
                            Foreground="AliceBlue"  
                            FontFamily="Bahnschrift SemiCondensed"   
                            FontSize="14"
                            Margin="0,15,0,0"/>

                    <TextBlock 
                            Text="Users"
                            Name="txtUsernames"
                            Height="20"  
                            Foreground="AliceBlue"  
                            FontFamily="Bahnschrift SemiCondensed"   
                            FontSize="14"
                            Margin="0,15,0,0"/>

                </StackPanel>

                <StackPanel Grid.Row="1" Width="265"  VerticalAlignment="Top" Grid.ColumnSpan="2"
                        Grid.Column="1" 
                        Margin="5,0,0,0" HorizontalAlignment="Left">

                    <TextBox 
                         x:Name="ServiceNowPortalTextBox"
                         Text="Enter url to ServiceNow portal"
                         Style="{DynamicResource SettingsTextBoxStyle}" 
                         Height="25" FontSize="14" TextChanged="ServiceNowPortalTextBox_TextChanged"
                         VerticalContentAlignment="Center"
                         Foreground="Gray"  FontFamily="Bahnschrift SemiCondensed" VerticalAlignment="Top" MaxLines="1"/>

                    <TextBox x:Name="CIPrefixTextBox"       
                         Text="Enter regex pattern for configuration items"
                         Style="{DynamicResource SettingsTextBoxStyle}" 
                         Height="25" FontSize="14" 
                         Foreground="Gray" Margin="0,10,0,0"
                         VerticalContentAlignment="Center"
                         FontFamily="Bahnschrift SemiCondensed" 
                         TextChanged="CIPrefixTextBox_TextChanged"
                         VerticalAlignment="Top" MaxLines="1"/>

                    <TextBox x:Name="PeripheralPrefixTextBox" 
                         Text="Enter regex pattern for peripherals"
                         Style="{DynamicResource SettingsTextBoxStyle}" 
                         Height="25" FontSize="14" 
                         Foreground="Gray" Margin="0,10,0,0"
                         VerticalContentAlignment="Center"
                         TextChanged="PeripheralPrefixTextBox_TextChanged"
                         FontFamily="Bahnschrift SemiCondensed" 
                         VerticalAlignment="Top" MaxLines="1"/>


                    <TextBox x:Name="UserNamesPrefixTextBox"
                         Text="Enter regex pattern for usernames"
                         Style="{DynamicResource SettingsTextBoxStyle}" 
                         Height="25" FontSize="14" 
                         Foreground="Gray" Margin="0,10,0,0"
                         VerticalContentAlignment="Center"
                         TextChanged="UserNamesPrefixTextBox_TextChanged"
                         FontFamily="Bahnschrift SemiCondensed" 
                         VerticalAlignment="Top" MaxLines="1"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,10,0">

                        <Button Name="LoadFileButton"  Grid.Column="3" 
                                Grid.Row="2" Style="{DynamicResource btnMenuStyle}" 
                                BorderBrush="Transparent"
                                Height="30" Width="30" Click="LoadFileButton_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="/Images/BrowseForFile.png" Stretch="Fill" TileMode ="None"/>
                            </Button.Background>

                            <Button.Triggers>

                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LoadFileButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LoadFileButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </Button.Triggers>

                        </Button>

                        <Button Name="SaveToFileButton"  Grid.Column="3" 
                                Grid.Row="2" Style="{DynamicResource btnMenuStyle}" 
                                BorderBrush="Transparent"
                                Height="30" Width="30" Click="SaveToFileButton_Click" Margin="15,0,0,0">
                            <Button.Background>
                                <ImageBrush ImageSource="/Images/SaveToFile.png" Stretch="Fill" TileMode ="None"/>
                            </Button.Background>

                            <Button.Triggers>

                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SaveToFileButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SaveToFileButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </Button.Triggers>

                        </Button>

                    </StackPanel>


                </StackPanel>





            </Grid>
        </ScrollViewer>

        <!--#endregion End Settings Content Grid-->

        <!--#region Theme Start-->
        <Grid Grid.Row="1" Grid.Column="1" Visibility="Hidden"  Margin="10,15,0,0" x:Name="gridColorPalette">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.9*"></ColumnDefinition>
                <ColumnDefinition Width="1.5*"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>

                <RowDefinition Height="32*"></RowDefinition>
                <RowDefinition Height="22*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Background="Transparent"
                    BorderBrush="AliceBlue"
                    BorderThickness="1" 
                    Grid.Row="0"
                    Grid.RowSpan="4"
                    Grid.Column="1" 
                    Grid.ColumnSpan="2" 
                    CornerRadius="4" 
                    Height="100"
                    Width="250"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" 
                    Padding="20,20,0,0"
                    x:Name="borderSliders"
                    />

            <StackPanel Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.RowSpan="2" Grid.ColumnSpan="2">
                <CheckBox Content="Title Bar"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             IsChecked="false"
                             Name="TitleBarCheckBox"
                             Checked="TitleBarCheckBox_Checked"
                             Style="{DynamicResource chkBoxRounderCornerStyle}"
                           />
                <CheckBox Content="Left Menu"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             Name="LeftMenuCheckBox"
                             IsChecked="False"
                             Checked="MenuPanelCheckBox_Checked"
                             Style="{DynamicResource chkBoxRounderCornerStyle}"
                             />
                <CheckBox Content="Window Content"
                             Foreground="AliceBlue"
                             FontSize="14"
                             FontFamily="Bahnschrift SemiCondensed"
                             Height="20"
                             Name="WindowContentCheckBox"
                             IsChecked="False"
                             Checked="WindowContentCheckBox_Checked"
                             Style="{DynamicResource chkBoxRounderCornerStyle}"
                            />

                <CheckBox Content="Button Color"
                          FontSize="14"
                          FontFamily="Bahnschrift SemiCondensed"
                          Foreground="AliceBlue"
                          Height="20"  
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          x:Name="ButtonColorCheckBox"
                          Style="{DynamicResource chkBoxRounderCornerStyle}"
                          />

                <CheckBox Content="Text Color"
                          FontSize="14"
                          FontFamily="Bahnschrift SemiCondensed"
                          Foreground="AliceBlue"
                          Height="20"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          x:Name="TextColorCheckBox"
                          Style="{DynamicResource chkBoxRounderCornerStyle}"
                          />

            </StackPanel>
            <!--#endregion-->

            <!--#region Red Green Blue text-->
            <StackPanel Grid.Row="0" 
                        Grid.Column="1" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="top" 
                        Grid.RowSpan="3"
                        Margin="0,10,0,0">
                <TextBlock Text="Red" 
                       Foreground="AliceBlue" 
                       Height="20"
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       x:Name="txtRed"
                       Grid.Column="0"/>
                <TextBlock Text="Green" 
                       x:Name="txtGreen"
                       Foreground="AliceBlue" 
                       Height="20"
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       Grid.Column="0"/>
                <TextBlock Text="Blue" 
                       x:Name="txtBlue"
                       Height="20"
                       Foreground="AliceBlue" 
                       Grid.Row="0" 
                       FontSize="14"
                       FontFamily="Bahnschrift SemiCondensed"
                       Grid.Column="0"/>

                <TextBlock Text="Opacity" 
                           x:Name="txtOpacity"
                           Foreground="AliceBlue" 
                           Margin="0 0,0,0" 
                           VerticalAlignment="Top" 
                           FontSize="14" FontFamily="Bahnschrift 
                           SemiCondensed"/>

            </StackPanel>
            <!--#endregion-->

            <!--#region RGB Sliders-->
            <StackPanel Grid.Row="0" 
                        Grid.Column="2" 
                        VerticalAlignment="Top" 
                        HorizontalAlignment="Left" 
                        Grid.RowSpan="3" 
                        Margin="10,10,0,0">

                <Slider Width="170"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderRed"
                        ValueChanged="SliderRed_ValueChanged"
                         />
                <Slider Width="170"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderGreen"
                        ValueChanged="SliderGreen_ValueChanged"/>

                <Slider Width="170"
                        HorizontalAlignment="Left"
                        Height="20"
                        Background="Transparent"
                        IsEnabled="True"
                        Minimum="0"
                        Maximum="255"
                        Interval="1"
                        Name="sliderBlue"
                        ValueChanged="SliderBlue_ValueChanged"/>

                <Slider x:Name="sliderOpacityValue" 
                        Height="20" 
                        Width="170"                      
                        ValueChanged="SliderOpacityValue_ValueChanged" 
                        Maximum="100" 
                        Value="100" 
                        Interval="36"
                        HorizontalAlignment="Left"
                        Background="Transparent"/>


            </StackPanel>
            <!--#endregion-->

            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Right" Margin="0,25,20,0">

                <Button Width="auto" 
                        Height="20"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        VerticalAlignment="Center"
                        Content="Reset to default"
                        FontFamily="Bahnschrift SemiCondensed"
                        Foreground="AliceBlue"
                        FontSize="14"
                        Name="ResetToDefaultButton"
                        Style="{StaticResource btnRecentlyOpenedItemsButtonStyle}" Click="ResetToDefaultButton_Click"/>


            </StackPanel>



        </Grid>


        <Grid x:Name="gridAbout" Visibility="Hidden" Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" ScrollViewer.CanContentScroll="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>

                <RowDefinition Height="3*"></RowDefinition>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>




            <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Vertical" Grid.ColumnSpan="2" Margin="5,0,0,0">


                <TextBlock x:Name="txtServiceNowOpen" Text="ServiceNowOpen" Foreground="AliceBlue" Margin="0,5,0,0"
                       FontSize="16" FontFamily="Bahnschrift SemiCondensed" FontWeight="DemiBold"
                       VerticalAlignment="Top" HorizontalAlignment="Left"  TextAlignment="Left"/>

                <TextBlock x:Name="txtDevelopedBy" Text="Copryright © 2021 Johnny Mongstad" Foreground="AliceBlue" Margin="0,5,0,0"
                       FontSize="12" FontFamily="Bahnschrift SemiCondensed" 
                       VerticalAlignment="Top" HorizontalAlignment="Left"  TextAlignment="Left"/>


                <TextBlock x:Name="txtVersion" Width="100" Text="Version: " Foreground="AliceBlue" Margin="0,5,0,0"
                       FontSize="12" FontFamily="Bahnschrift SemiCondensed"
                       VerticalAlignment="Top" HorizontalAlignment="Left"  TextAlignment="Left"/>

            </StackPanel>






        </Grid>
        <Grid x:Name="gridRecentlyOpenedItems" Visibility="Hidden" Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="1.5*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.RowSpan="3" Grid.Row="1" Grid.Column="0" Margin="0,5,0,0">

                <ListView ItemsSource="{Binding RecentItems}" 
                          Style="{DynamicResource listRecentlyOpenedItemsStyle}"  
                          x:Name="listViewRecentlyOpenedItems" 
                          Height="110" Width="330" HorizontalAlignment="Left" 
                          Margin="10,10,0,0" FontSize="16" 
                          FontFamily="Bahnschrift SemiCondensed" Foreground="Black" 
                          SelectionMode="Single" KeyDown="ListViewRecentlyOpenedItems_KeyDown" 
                          MouseDoubleClick="ListViewRecentlyOpenedItems_MouseDoubleClick">

                    <ListView.ItemTemplate>

                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>

                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" 
                                       Content="{Binding DateTimeOpened}" 
                                       HorizontalContentAlignment="Left" 
                                       VerticalContentAlignment="Center"/>

                                <Label Grid.Row="0" Grid.Column="1" 
                                       Content="{Binding Item}" 
                                       HorizontalContentAlignment="Left" 
                                       VerticalContentAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="1" Margin="10,5,10,10" Grid.Column="1" HorizontalAlignment="Center" Width="60">
                <Button Style="{DynamicResource btnMenuStyle}" x:Name="CopyButton" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" 
                          BorderBrush="Transparent" Margin="0,10,0,0" Click="CopyButton_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/copy-white.png"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CopyButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CopyButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <Button Style="{DynamicResource btnMenuStyle}" x:Name="OpenInBrowserButton" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" 
                         BorderBrush="Transparent" Margin="0,10,0,0" Click="OpenInBrowserButton_Click">

                    <Button.Background>
                        <ImageBrush ImageSource="/Images/openinbrowser-white.png"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OpenInBrowserButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OpenInBrowserButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

            </StackPanel>

        </Grid>
        <Grid Grid.Column="1" Grid.Row="1" x:Name="gridMainContent" Visibility="Hidden">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock x:Name="txtOpen" Text="Open" Foreground="White" 
                       HorizontalAlignment="Left" Height="30" 
                       VerticalAlignment="Center"  FontFamily="Bahnschrift SemiCondensed"
                       FontSize="18" FontWeight="Regular" FontStyle="Normal" Margin="10,5,0,0"/>

                <TextBox Style="{DynamicResource txtItemStyle}" MaxLength="100"  Height="30" Width="275" Margin="10" MaxLines="1" TextWrapping="NoWrap"
                         Padding="5,0,0,0" 
                     x:Name="UserInputTextBox" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" FontWeight="DemiBold"
                     TextChanged="UserInputTextBox_TextChanged" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" KeyUp="UserInputTextBox_KeyUp"  CharacterCasing="Upper"  FontFamily="Segoe UI"/>
                <Button Style="{DynamicResource btnMenuStyle}" IsEnabled="False" Width="30" Click="OKButton_Click" Height="30"  Opacity="0.2" BorderThickness="0" BorderBrush="Transparent" x:Name="GoButton" IsDefault="True">
                    <Button.Background>
                        <ImageBrush ImageSource="/Images/checkmark-white.png" Stretch="Fill" TileMode ="None"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="GoButton"
                                      Storyboard.TargetProperty="Height"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="HomeMenuButton"
                                      Storyboard.TargetProperty="Width"
                                      From="30" To="25" Duration="0:0:0.20" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="0" Grid.Row="2" Margin="10,0,0,0">
                <CheckBox x:Name="FreeTextSearchCheckBox" Style="{DynamicResource chkBoxRounderCornerStyle}" Content="Freetext search" Foreground="AliceBlue"
                          FontSize="14" FontFamily="Bahnschrift SemiCondensed" VerticalContentAlignment="Center"
                          HorizontalContentAlignment="Left" HorizontalAlignment="Left"/>

                <CheckBox Style="{DynamicResource chkBoxRounderCornerStyle}" x:Name="HideFromTaskBarCheckBox"
                      Grid.Row="3" Grid.Column="0" Foreground="AliceBlue" Content="Hide from taskbar"
                      HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" Margin="0,5,0,0"
                      FontFamily="Bahnschrift SemiCondensed" VerticalContentAlignment= "Center"
                      HorizontalContentAlignment="Left" Checked="HideFromTaskBarCheckBox_Checked" Unchecked="HideFromTaskBarCheckBox_Unchecked" 
                      />

                <CheckBox x:Name="AlwaysOnTopCheckBox" Style="{DynamicResource chkBoxRounderCornerStyle}" Content="Always on top" Foreground="AliceBlue"
                          Margin="0,5,0,0" Checked="AlwaysOnTopCheckBox_Checked" VerticalContentAlignment="Center"
                          HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                          Unchecked="AlawaysOnTopCheckBox_Unchecked" FontSize="14" FontFamily="Bahnschrift SemiCondensed"/>

            </StackPanel>


        </Grid>

    </Grid>
</Window>
